{
  "$schema": "http://json.schemastore.org/tsconfig",
  "exclude": [
    "**/*.test-d.ts",
    "**/.tmp/**",
    "**/.build/**",
    "**/build/**",
    "**/dist/**",
    "**/docs/**",
    "**/node_modules/**",
    "**/__generated__/**",
    "**/generated/**",
    "**/coverage/**",
    "**/__fixtures__/**"
  ],
  "compilerOptions": {
    // Target latest version of ECMAScript.
    "target": "esnext",
    "module": "esnext",
    "lib": ["esnext", "dom", "dom.iterable"],
    // ensure that nobody can accidentally use this config for a build
    "noEmit": true,
    "declaration": true,
    "declarationMap": true,
    "noEmitOnError": true,
    "noErrorTruncation": true,
    /**
      Svelte Preprocess cannot figure out whether you have a value or a type, so tell TypeScript
      to enforce using `import type` instead of `import` for Types.
     */
    "importsNotUsedAsValues": "error",
    "allowJs": true,
    // Generate inline sourcemaps
    "sourceMap": false,
    "inlineSourceMap": true,
    "inlineSources": true,
    // Search under node_modules for non-relative imports.
    "moduleResolution": "node",
    // Enable strictest settings like strictNullChecks & noImplicitAny.
    "strict": true,
    // Disallow features that require cross-file information for emit.
    "isolatedModules": true,
    "allowSyntheticDefaultImports": true,
    // Import non-ES modules as default imports.
    "esModuleInterop": true,
    // allow to import json files
    "resolveJsonModule": true,
    // keep jsx as is
    "jsx": "preserve",
    // babel does not support them yet
    "preserveConstEnums": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "plugins": [
      {
        "name": "typescript-eslint-language-service"
      }
    ]
  }
}
